% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/long_wide.R
\name{long_wide}
\alias{long_wide}
\title{long_wide}
\usage{
long_wide(
  long_df,
  id = "id",
  subjid = "subjid",
  sex = "sex",
  agedays = "agedays",
  param = "param",
  measurement = "measurement",
  clean_value = "clean_value",
  include_all = FALSE,
  inclusion_types = c("Include"),
  na.rm = TRUE
)
}
\arguments{
\item{id}{name of observation ID column}

\item{subjid}{name of subject ID column}

\item{sex}{name of sex descriptor column}

\item{agedays}{name of age (in days) descriptor column}

\item{param}{name of parameter column to identify each type of measurement}

\item{measurement}{name of measurement column containing the actual measurement data}

\item{include_all}{Determines whether the function keeps all exclusion codes. If TRUE, all exclusion types are kept and the inclusion_types argument is ignored. Defaults to FALSE.}

\item{inclusion_types}{Vector indicating which exclusion codes from the cleaning algorithm should be included in the data, given that include_all is FALSE. For all options, see growthcleanr::cleangrowth(). Defaults to c("Include").}

\item{na.rm}{exclude rows where bli was not computed due to missing values.}

\item{data}{A data frame to be transformed. Expects columns: id, subjid, sex, agedays, param, measurement, and clean_value.}
}
\value{
Returns a data frame transformed from long to wide. Includes only values flagged with indicated inclusion types. Note that, for each subject, heights without corresponding weights for a given age (and vice versa) will be dropped.
}
\description{
\code{long_wide} transforms data from long to wide format. Ideal for transforming output from growthcleanr::cleangrowth() into a format suitable for growthcleanr::ext_bmiz().
}
\examples{
# Run on a small subset of given data
df <- as.data.frame(syngrowth)
df <- df[df$subjid \%in\% unique(df[, "subjid"])[1:5], ]
df <- cbind(df,
  "clean_value" = cleangrowth(
    df$subjid,
    df$param,
    df$agedays,
    df$sex,
    df$measurement
  )
)
# Convert to wide format
long_df <- long_wide(df)

# Include all inclusion types
long_df <- long_wide(df, include_all = TRUE)

# Specify all inclusion codes
long_df <- long_wide(df, inclusion_types = c("Include", "Exclude-Carried-Forward"))
}
